name: CI/CD (prod)

on:
  push:
    branches: ["main"]
  workflow_dispatch:

concurrency:
  group: cicd-prod-${{ github.ref }}
  cancel-in-progress: true

env:
  IMAGE_NAME: booquest-ai
  DEPLOY_TAG: latest
  DOCKERFILE: docker/api.Dockerfile

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Login to NCP registry
        run: |
          echo "${{ secrets.REGISTRY_PASSWORD_PROD }}" | docker login "${{ secrets.REGISTRY_URL_PROD }}" \
            -u "${{ secrets.REGISTRY_USERNAME_PROD }}" --password-stdin

      - name: Build image
        run: |
          docker build -f "${{ env.DOCKERFILE }}" \
            -t "${{ secrets.REGISTRY_URL_PROD }}/${{ env.IMAGE_NAME }}:${{ env.DEPLOY_TAG }}" \
            -t "${{ secrets.REGISTRY_URL_PROD }}/${{ env.IMAGE_NAME }}:${GITHUB_SHA::7}" \
            .

      - name: Push images
        run: |
          docker push "${{ secrets.REGISTRY_URL_PROD }}/${{ env.IMAGE_NAME }}:${{ env.DEPLOY_TAG }}"
          docker push "${{ secrets.REGISTRY_URL_PROD }}/${{ env.IMAGE_NAME }}:${GITHUB_SHA::7}"

      - name: Logout
        if: always()
        run: docker logout "${{ secrets.REGISTRY_URL_PROD }}" || true

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy via API server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST_PROD_API }}
          username: ${{ secrets.SSH_USER_PROD_API }}
          key: ${{ secrets.SSH_KEY_PROD_API }}
          script_stop: true
          command_timeout: 20m
          script: |
            set -euo pipefail
            set -x
            
            echo "IMG=${{ secrets.REGISTRY_URL_PROD }}/${{ env.IMAGE_NAME }}:${{ env.DEPLOY_TAG }}"
            
            # 사전 점검 (파일/권한)
            sudo -n ls -l /opt/booquest/deploy/ai/deploy_ai.sh
            sudo -n ls -ld /opt/booquest/deploy /opt/booquest/deploy/ai || true
            sudo -n true && echo "sudo NOPASSWD OK"
            
            # 배포 실행 (로그 남기고, 실패 시 파이프라인도 실패하도록 pipefail 유지)
            sudo -n \
              REGISTRY_USERNAME_PROD="${{ secrets.REGISTRY_USERNAME_PROD }}" \
              REGISTRY_PASSWORD_PROD="${{ secrets.REGISTRY_PASSWORD_PROD }}" \
              AI_SSH_KEY_PATH="/home/booquest/key/booquest-prod-app-key.pem" \
              /opt/booquest/deploy/ai/deploy_ai.sh \
              "${{ secrets.REGISTRY_URL_PROD }}/${{ env.IMAGE_NAME }}:${{ env.DEPLOY_TAG }}" \
              "${{ secrets.AI_PRIVATE_HOST_PROD }}" \
              "${{ secrets.AI_DEPLOY_USER_PROD }}" 2>&1 | tee -a /tmp/gha_deploy.log